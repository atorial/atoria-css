name: Publish CI
on:
  push:
    tags:
      - 'v*.*.*'
env:
  NODE_AUTH_TOKENZ: ${{secrets.NODE_AUTH_TOKEN_GLOBAL}}
jobs:
  build:
    name: Build Library ðŸ“¦
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [ 16]
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.yarn
            ~/.npm
            ~/.pnpm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies and build project
        run: |
         npm i -g yarn pnpm && pnpm i && pnpm scss
  create-release:
    needs: build
    name: Create A Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [16]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
           body_path: CHANGELOG.md
  publish-package:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: '16.x'
            registry-url: 'https://registry.npmjs.org'
      - run: npm i -g pnpm yarn && pnpm install && pnpm scss
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}




